import React from 'react';
import 'bootstrap/dist/css/bootstrap.min.css';

const FriendsActivityComponent = () => {
  const activities = [
    { friend: 'Alice', action: 'liked', type: 'song', value: 'Eternal Dream', time: '2h ago' },
    { friend: 'Bob', action: 'started following', type: 'person', value: 'John Doe', time: '5h ago' },
    { friend: 'Charlie', action: 'shared', type: 'playlist', value: 'Rock Classics', time: '1d ago' },
  ];

  return (
    <div className="p-4">
      <h2 className="text-white mb-4">Friends Activity</h2>
      <div className="row">
        {activities.map((activity, index) => (
          <div key={index} className="col-md-6 col-lg-4 mb-3">
            <div className="card bg-dark text-white p-3 h-100 shadow-sm">
              <p className="m-0">
                <strong>{activity.friend}</strong> {activity.action} a {activity.type}:{' '}
                <em>{activity.value}</em>
                <span className="text-muted ml-2">- {activity.time}</span>
              </p>
            </div>
          </div>
        ))}
      </div>
    </div>
  );
};

export default FriendsActivityComponent;


import React, { useState } from 'react';

const generateRandomImage = (seed) => `https://picsum.photos/seed/${seed}/400/400`;

const generateRandomLiveEvents = (count) => {
  const titles = ["Rock Night", "Indie Live Session", "Jazz Evening", "Pop Hits Concert", "Country Stars", "Hip-Hop Jam", "Classical Gala"];
  const venues = ["The Music Hall", "Underground Studio", "Open Air Arena", "Downtown Club", "Main Street Stage"];

  let events = [];
  for (let i = 0; i < count; i++) {
    const title = titles[Math.floor(Math.random() * titles.length)];
    const date = `July ${Math.floor(Math.random() * 30) + 1}`;
    const time = `${Math.floor(Math.random() * 12) + 1}:00 ${Math.random() > 0.5 ? 'AM' : 'PM'}`;
    const venue = venues[Math.floor(Math.random() * venues.length)];
    const price = `$${Math.floor(Math.random() * 50) + 15}`;
    const imageUrl = generateRandomImage(title + date);
    events.push({ id: i + 1, title, date, time, imageUrl, venue, price });
  }
  return events;
};

const LiveEventComponent = ({ setConfirmationMessage }) => {
  const [reminders, setReminders] = useState([]);
  const [loading, setLoading] = useState(false);
  const events = generateRandomLiveEvents(8);

  const handleRSVP = async (event) => {
    setLoading(true);
    try {
      await new Promise(resolve => setTimeout(resolve, 500));
      if (!reminders.includes(event.id)) {
        setReminders(prev => [...prev, event.id]);
        setConfirmationMessage(`Successfully RSVP'd for ${event.title}`);
      } else {
        setReminders(prev => prev.filter(id => id !== event.id));
        setConfirmationMessage(`Removed RSVP for ${event.title}`);
      }
    } catch (error) {
      setConfirmationMessage('Error updating RSVP. Please try again.');
    } finally {
      setLoading(false);
      setTimeout(() => setConfirmationMessage(''), 3000);
    }
  };

  return (
    <div className="p-6">
      <h2 className="text-white mb-6">Live Events</h2>
      <div className="row">
        {events.map((event) => (
          <div key={event.id} className="col-md-6 col-lg-4 mb-4">
            <div className="card bg-dark text-white shadow-sm h-100">
              <img src={event.imageUrl} alt={event.title} className="card-img-top" />
              <div className="card-body">
                <h5 className="card-title">{event.title}</h5>
                <p>{event.date} at {event.time}</p>
                <p>{event.venue}</p>
                <p>{event.price}</p>
                <button
                  onClick={() => handleRSVP(event)}
                  disabled={loading}
                  className={`btn w-100 mt-3 ${reminders.includes(event.id) ? 'btn-secondary' : 'btn-primary'}`}
                >
                  {loading ? 'Processing...' : reminders.includes(event.id) ? 'Cancel RSVP' : 'RSVP'}
                </button>
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>
  );
};

export default LiveEventComponent;


import React, { useState } from 'react';

const generateRandomImage = (seed) => `https://picsum.photos/seed/${seed}/300/300`;

const generateRandomPodcasts = (count) => {
  const titles = ["Tech Talk Daily", "Health Matters", "History Unlocked", "Startup Stories", "Mindful Moments", "Space Odyssey", "Mystery Hour", "Book Lover's Paradise"];
  const hosts = ["John Doe", "Jane Smith", "David Johnson", "Alice Brown", "Emily White", "Michael Scott", "Rachel Green"];

  let podcasts = [];
  for (let i = 0; i < count; i++) {
    const title = titles[Math.floor(Math.random() * titles.length)];
    const host = hosts[Math.floor(Math.random() * hosts.length)];
    const duration = `${Math.floor(Math.random() * 30) + 15}:00`;
    const imageUrl = generateRandomImage(title + host);
    const description = `${title} by ${host} provides in-depth insights and valuable information.`;
    podcasts.push({ id: i + 1, title, host, duration, imageUrl, description });
  }
  return podcasts;
};

const PodcastComponent = () => {
  const [currentlyPlaying, setCurrentlyPlaying] = useState(null);
  const podcasts = generateRandomPodcasts(8);

  const handlePlayPodcast = (podcast) => {
    setCurrentlyPlaying(currentlyPlaying?.id === podcast.id ? null : podcast);
  };

  return (
    <div className="p-6">
      <h2 className="text-white mb-6">Podcasts</h2>
      <div className="row">
        {podcasts.map((podcast) => (
          <div key={podcast.id} className="col-md-6 col-lg-4 mb-4">
            <div className="card bg-dark text-white shadow-sm h-100">
              <img src={podcast.imageUrl} alt={podcast.title} className="card-img-top" />
              <div className="card-body">
                <h5 className="card-title">{podcast.title}</h5>
                <p>Hosted by: {podcast.host}</p>
                <p>{podcast.description}</p>
                <div className="d-flex justify-content-between align-items-center">
                  <span className="text-muted">{podcast.duration}</span>
                  <button
                    onClick={() => handlePlayPodcast(podcast)}
                    className={`btn ${currentlyPlaying?.id === podcast.id ? 'btn-success' : 'btn-outline-success'}`}
                  >
                    {currentlyPlaying?.id === podcast.id ? 'Pause' : 'Play'}
                  </button>
                </div>
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>
  );
};

export default PodcastComponent;

import React, { useState } from 'react';

const generateRandomImage = (seed) => `https://picsum.photos/seed/${seed}/300/300`;

const generateRandomPodcasts = (count) => {
  const titles = ["Tech Talk Daily", "Health Matters", "History Unlocked", "Startup Stories", "Mindful Moments", "Space Odyssey", "Mystery Hour", "Book Lover's Paradise"];
  const hosts = ["John Doe", "Jane Smith", "David Johnson", "Alice Brown", "Emily White", "Michael Scott", "Rachel Green"];

  let podcasts = [];
  for (let i = 0; i < count; i++) {
    const title = titles[Math.floor(Math.random() * titles.length)];
    const host = hosts[Math.floor(Math.random() * hosts.length)];
    const duration = `${Math.floor(Math.random() * 30) + 15}:00`;
    const imageUrl = generateRandomImage(title + host);
    const description = `${title} by ${host} provides in-depth insights and valuable information.`;
    podcasts.push({ id: i + 1, title, host, duration, imageUrl, description });
  }
  return podcasts;
};

const PodcastComponent = () => {
  const [currentlyPlaying, setCurrentlyPlaying] = useState(null);
  const podcasts = generateRandomPodcasts(8);

  const handlePlayPodcast = (podcast) => {
    setCurrentlyPlaying(currentlyPlaying?.id === podcast.id ? null : podcast);
  };

  return (
    <div className="p-6">
      <h2 className="text-white mb-6">Podcasts</h2>
      <div className="row">
        {podcasts.map((podcast) => (
          <div key={podcast.id} className="col-md-6 col-lg-4 mb-4">
            <div className="card bg-dark text-white shadow-sm h-100">
              <img src={podcast.imageUrl} alt={podcast.title} className="card-img-top" />
              <div className="card-body">
                <h5 className="card-title">{podcast.title}</h5>
                <p>Hosted by: {podcast.host}</p>
                <p>{podcast.description}</p>
                <div className="d-flex justify-content-between align-items-center">
                  <span className="text-muted">{podcast.duration}</span>
                  <button
                    onClick={() => handlePlayPodcast(podcast)}
                    className={`btn ${currentlyPlaying?.id === podcast.id ? 'btn-success' : 'btn-outline-success'}`}
                  >
                    {currentlyPlaying?.id === podcast.id ? 'Pause' : 'Play'}
                  </button>
                </div>
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>
  );
};

export default PodcastComponent;

import React from 'react';

const RightHandSidebarComponent = ({ title, artist, imageUrl, upNext }) => {
  return (
    <div className="right-hand-sidebar bg-dark text-white p-4 fixed-sidebar">
      <h4>Now Playing</h4>
      <img src={imageUrl} alt={title} className="img-fluid rounded mb-3" />
      <h5>{title}</h5>
      <p className="text-muted">{artist}</p>

      {upNext.length > 0 && (
        <div className="up-next mt-4">
          <h6>Up Next</h6>
          <ul className="list-unstyled">
            {upNext.map((song, index) => (
              <li key={index} className="my-2">
                <strong>{song.title}</strong> by {song.artist}
              </li>
            ))}
          </ul>
        </div>
      )}
    </div>
  );
};

export default RightHandSidebarComponent;


import React, { useState, useEffect, useRef } from 'react';
import 'bootstrap/dist/css/bootstrap.min.css';

const SearchComponent = ({ playlists = [], onSongSelect }) => {
  const [searchTerm, setSearchTerm] = useState('');
  const [suggestions, setSuggestions] = useState([]);
  const [isOpen, setIsOpen] = useState(false);
  const wrapperRef = useRef(null);

  useEffect(() => {
    // Close suggestions if clicking outside of search box
    const handleClickOutside = (event) => {
      if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {
        setIsOpen(false);
      }
    };
    document.addEventListener('mousedown', handleClickOutside);
    return () => document.removeEventListener('mousedown', handleClickOutside);
  }, []);

  // Extract all songs from playlists
  const allSongs = playlists.reduce((acc, playlist) => [...acc, ...playlist.songs], []);

  const handleChange = (e) => {
    const value = e.target.value;
    setSearchTerm(value);
    setIsOpen(true);

    if (value.trim()) {
      const filtered = allSongs.filter(song =>
        song.title.toLowerCase().includes(value.toLowerCase()) ||
        song.artist.toLowerCase().includes(value.toLowerCase())
      );
      setSuggestions(filtered.slice(0, 5)); // Limit to 5 suggestions
    } else {
      setSuggestions([]);
    }
  };

  const handleSuggestionClick = (song) => {
    setSearchTerm(song.title);
    setIsOpen(false);
    onSongSelect(song); // Play the selected song
  };

  return (
    <div className="p-4" ref={wrapperRef}>
      <div className="position-relative">
        <input
          type="text"
          className="form-control p-3"
          placeholder="Search songs..."
          value={searchTerm}
          onChange={handleChange}
        />
        
        {isOpen && suggestions.length > 0 && (
          <div className="position-absolute w-100 mt-1 bg-dark rounded shadow overflow-hidden">
            {suggestions.map((song, index) => (
              <div
                key={index}
                className="p-3 hover:bg-secondary cursor-pointer border-bottom border-secondary"
                onClick={() => handleSuggestionClick(song)}
              >
                <div className="font-weight-bold text-white">{song.title}</div>
                <div className="text-muted">{song.artist}</div>
              </div>
            ))}
          </div>
        )}
      </div>
    </div>
  );
};

export default SearchComponent;


import React from 'react';
import 'bootstrap/dist/css/bootstrap.min.css';
import { BsHeartFill } from 'react-icons/bs';

const UserProfileComponent = ({ userName, email, favorites, onRemoveFavorite }) => {
  return (
    <div className="main-content p-4">
      <div className="profile-header mb-5">
        <div className="d-flex align-items-center">
          <img 
            src="https://picsum.photos/seed/useravatar/100/100"
            alt="User Avatar"
            className="rounded-circle border"
            style={{ width: "100px", height: "100px", marginRight: "20px" }}
          />
          <div>
            <h2 className="text-white">{userName}</h2>
            <p className="text-muted">{email}</p>
          </div>
        </div>
      </div>

      <h3 className="mb-4">Favorite Songs</h3>
      <div className="row">
        {favorites.length > 0 ? (
          favorites.map((song) => (
            <div key={song.id} className="col-md-4 col-lg-3 mb-4">
              <div className="card h-100 bg-dark text-white">
                <img src={song.imageUrl} className="card-img-top" alt={song.title} />
                <div className="card-body d-flex flex-column">
                  <h5 className="card-title text-truncate">{song.title}</h5>
                  <p className="card-text text-muted">{song.artist}</p>
                  <small className="text-muted">{song.duration}</small>
                  <div className="mt-auto">
                    <button
                      className="btn btn-outline-danger btn-sm mt-2"
                      onClick={() => onRemoveFavorite(song, false)}
                    >
                      <BsHeartFill /> Remove Favorite
                    </button>
                  </div>
                </div>
              </div>
            </div>
          ))
        ) : (
          <p className="text-muted">You have no favorite songs yet. Start adding some!</p>
        )}
      </div>
    </div>
  );
};

export default UserProfileComponent;
